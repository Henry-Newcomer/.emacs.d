 ============================================================================
 ****************************************************************************
                          Henry's Emacs settings.org
 ****************************************************************************
 ============================================================================

* Disable the tool & menu bars
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
(tool-bar-mode -1)
#+END_SRC

* Disable welcome screen
#+BEGIN_SRC emacs-lisp
(setq inhibit-startup-screen t)
#+END_SRC

* Open Emacs as fullscreen by default
#+BEGIN_SRC emacs-lisp
(add-to-list 'default-frame-alist '(fullscreen . maximized))
#+END_SRC

 =================================
   Repositories
 =================================

#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
#+END_SRC

* Required (before package customizations)
#+BEGIN_SRC emacs-lisp
(package-initialize)
#+END_SRC


 =================================
   Check for packages during startup
 =================================

#+BEGIN_SRC emacs-lisp
(defvar my-packages

  '(evil
    evil-leader
    nlinum-relative
    org-bullets
    neotree
    projectile
    undo-tree)

  "A list of packages to ensure are installed at launch.")

(defun my-packages-installed-p ()
  (cl-loop for p in my-packages
           when (not (package-installed-p p)) do (cl-return nil)
           finally (cl-return t)))
(unless (my-packages-installed-p)
  ;; check for new packages (package versions)
  (package-refresh-contents)
  ;; install the missing packages
  (dolist (p my-packages)
    (when (not (package-installed-p p))
      (package-install p))))
#+END_SRC

 =================================
   Package Settings
 =================================

* Evil <Leader>
#+BEGIN_SRC emacs-lisp
;; *Make sure this is placed before evil mode*
(require 'evil-leader)
(global-evil-leader-mode)
(evil-leader/set-leader "<SPC>")
#+END_SRC

* Evil mode
#+BEGIN_SRC emacs-lisp
;;(add-to-list 'load-path "~/.emacs.d/from_backup/evil")
(setq evil-want-C-u-scroll t)
(require 'evil)
(evil-mode 1)
#+END_SRC

* Wrap region (not used)
#+BEGIN_SRC emacs-lisp
;; (add-to-list 'load-path "~/.emacs.d/from_backup/wrap-region.el")
;; (require 'wrap-region)
#+END_SRC

* Neotree
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "/some/path/neotree")
(require 'neotree)
(global-set-key [f8] 'neotree-toggle)
;;setq neo-theme (if (display-graphic-p) 'icons 'arrow))
#+END_SRC

* Projectile
#+BEGIN_SRC emacs-lisp
(projectile-mode +1)
;;(define-key projectile-mode-map (kbd "s-p") 'projectile-command-map)
(define-key projectile-mode-map (kbd "C-c p") 'projectile-command-map)
#+END_SRC

* Undo Tree
#+BEGIN_SRC emacs-lisp
;;(add-to-list 'load-path "~/.emacs.d/from_backup/undo-tree")
(global-undo-tree-mode)
#+END_SRC

* Relative line numbers
#+BEGIN_SRC emacs-lisp
(require 'nlinum-relative)
(nlinum-relative-setup-evil)                    ;; setup for evil
(add-hook 'prog-mode-hook 'nlinum-relative-mode)
(setq nlinum-relative-redisplay-delay 0)        ;; delay
(setq nlinum-relative-current-symbol "")        ;; "" to display current line number (was "->")
(setq nlinum-relative-offset 0)                 ;; 1 if you want 0, 2, 3...
#+END_SRC

* Improved/custom Org mode bullets
#+BEGIN_SRC emacs-lisp
;;(add-to-list 'load-path "~/.emacs.d/from_backup/org-bullets")
(require 'org-bullets)
(setq org-bullets-bullet-list
    '("?" "?" "?" "?" "?" "?"))
:config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC

* PHP mode
#+BEGIN_SRC emacs-lisp
;;(add-to-list 'load-path "~/.emacs.d/from_backup/php-mode")
;;(require 'php-mode)
#+END_SRC

* Enable recent mode
#+BEGIN_SRC emacs-lisp
(recentf-mode 1)
(setq recentf-max-menu-items 25)
(global-set-key "\C-x\ \C-r" 'recentf-open-files)
#+END_SRC


 =================================
   Set default settings
 =================================

* Custom-set-variables
#+BEGIN_SRC emacs-lisp
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["black" "#d55e00" "#009e73" "#f8ec59" "#0072b2" "#cc79a7" "#56b4e9" "white"])
 '(custom-enabled-themes (quote (deeper-blue)))
 '(package-selected-packages (quote (wrap-region php-mode org-bullets evil))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
#+END_SRC

 =================================
 eof
